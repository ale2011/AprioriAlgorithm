/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.njit.cs634.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;

/**
 *
 * @author Ashley Le
 */
public class Apriori extends javax.swing.JFrame {

    public static Connection connection;
    
    final private String ENDPOINT1 = "alestore1.cxuvb3hzawez.us-east-1.rds.amazonaws.com";
    final private String ENDPOINT2 = "alestore2.cxuvb3hzawez.us-east-1.rds.amazonaws.com";
    final private String ENDPOINT3 = "alestore3.cxuvb3hzawez.us-east-1.rds.amazonaws.com";
    final private String ENDPOINT4 = "alestore4.cxuvb3hzawez.us-east-1.rds.amazonaws.com";
    final private String ENDPOINT5 = "alestore5.cxuvb3hzawez.us-east-1.rds.amazonaws.com";
    
    final private String PORTNUMBER = "3306";
    final private String USERNAME = "ale";
    final private String PASSWORD = "Computer123#";    
    
    public Statement statement;
    public PreparedStatement prep_statement;
    public ResultSet resultSet;
    
    public static ArrayList <String> inventory = new ArrayList <String>();  // contains a list of all items from inventory    
    public static HashMap <Integer, ArrayList> transactionMap = new HashMap <Integer, ArrayList> ();
    // this hash map contains the transaction id (String) as key, and the ordered items in an String array
    /******
     +------------------------------+
     |  Transaction id  |   items   |
     +------------------------------+
     | DB1              | {A, B, C} |   
     | DB2              | {B, E}    |
     | ...              | ...       |
     +------------------------------+
     */
    
    public static int support = 0;
    public static int confidence = 0;
    //public final int totalTransaction;  // total number of transactions accross all databases
    //public final int minTransaction;    // the minimum number of transactions needed to satisfy
                                        //  support percentage
   
    /**
     * Creates new form Apriori
     */
    public Apriori() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        connectBttn = new javax.swing.JToggleButton();
        status = new javax.swing.JLabel();
        runBttn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        inputSupport = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputConfidence = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Apriori Algorithm");

        connectBttn.setText("Connect to DB & Retrieve Data");
        connectBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBttnActionPerformed(evt);
            }
        });

        runBttn.setText("Run Apriori Algorithm");
        runBttn.setEnabled(false);
        runBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBttnActionPerformed(evt);
            }
        });

        jLabel3.setText("Support %:");

        inputSupport.setEditable(false);

        jLabel4.setText("Confidence %:");

        inputConfidence.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Transactions", jPanel1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Results", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputConfidence, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(runBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(connectBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectBttn)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runBttn)
                    .addComponent(jLabel3)
                    .addComponent(inputSupport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(inputConfidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBttnActionPerformed
        loadDriver();   // load the mysql driver
        connectToDatabase(ENDPOINT1);    // connect to database
        
        status.setText("Connected successfully.");  // confirmation
        
        // get table from db
        
        // insert data into hashmap
        
        // enable input fields and button
        inputSupport.setEnabled(true);
        inputConfidence.setEnabled(true);
        runBttn.setEnabled(true);
        connectBttn.setEnabled(false);
    }//GEN-LAST:event_connectBttnActionPerformed

    private void runBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBttnActionPerformed
        // get data
        support = Integer.parseInt(inputSupport.getText().trim());
        confidence = Integer.parseInt(inputConfidence.getText().trim());
        
    }//GEN-LAST:event_runBttnActionPerformed

    /**
     * Generate frequent item sets from a HashMap(transactionID, ArrayList of purchased items)
     * @param map the HashMap
     * @return The frequent item sets. HashMap(item sets, number of appearing)
     */
    private HashMap generateFrequentItemSets(HashMap map)
    {
        HashMap <String, Integer> itemSets = new HashMap();
        
        // iterate through a master list of transaction
        for(Object obj : map.values())
        {
            // a list of purchased items from 1 transaction            
            ArrayList <String> purchasedItems = (ArrayList <String>) obj; 
            
            // iterate through each item from a transaction
            for(String item : purchasedItems)
            {
                if(itemSets.containsKey(item))   // if item already exists
                {
                    // increase count by one
                    itemSets.put(item, itemSets.get(item) + 1);
                }
                else    // item is not in this list yet
                {
                    itemSets.put(item, 1);
                }
            } 
        } 
        return itemSets;
    }
    
    
    /**
     * Load mysql driver to this program
     */
    public void loadDriver() {      
        try {
            // The newInstance() call is a work around for some
            // broken Java implementations

            Class.forName("com.mysql.jdbc.Driver").newInstance();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Apriori.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    /**
     * Connect to the database
     */
    public void connectToDatabase(String endpoint) {
        try {
            //connect = DriverManager.getConnection(url + "?user=" + db_username + "&password=" + db_password);
            connection = DriverManager.getConnection("jdbc:mysql://" + endpoint + ":" + PORTNUMBER + 
                                                    "/sql9209681?user=" + USERNAME + "&password=" + PASSWORD);
            
            statement = connection.createStatement();
            
        } catch (SQLException ex) {
            Logger.getLogger(Apriori.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Apriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Apriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Apriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Apriori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Apriori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton connectBttn;
    private javax.swing.JTextField inputConfidence;
    private javax.swing.JTextField inputSupport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton runBttn;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
