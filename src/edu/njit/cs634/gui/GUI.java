/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.njit.cs634.gui;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ashley Le
 */
public class GUI extends javax.swing.JFrame {
    
    public final Chooser fileChooser = new Chooser();
    public File[] files;
    //public final int totalTransaction;  // total number of transactions accross all databases
    //public final int minTransaction;    // the minimum number of transactions needed to satisfy
                                        //  support percentage
    
    private ArrayList <List<String>> TRANSACTIONS_LIST = new ArrayList ();
    private HashMap <String, Integer> ITEM_SET = new HashMap();
    
    private final Component frame = null;
    private int SUPPORT, CONFIDENCE; // store user's input
    private int TOTAL_TRANSACTIONS, MAX_ITEMS, MIN_SUPPORT_COUNT;
    
    /**
     * Creates new form Apriori
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        browseBttn = new javax.swing.JToggleButton();
        runBttn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        inputSupport = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputConfidence = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        transactionsTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        minSupportCountText = new javax.swing.JLabel();
        resetBttn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Apriori Algorithm");

        browseBttn.setText("Browse Files...");
        browseBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseBttnActionPerformed(evt);
            }
        });

        runBttn.setText("Run Apriori Algorithm");
        runBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBttnActionPerformed(evt);
            }
        });

        jLabel3.setText("Support %:");

        inputSupport.setText("20");

        jLabel4.setText("Confidence %:");

        inputConfidence.setText("50");

        transactionsTextArea.setColumns(20);
        transactionsTextArea.setRows(5);
        jScrollPane2.setViewportView(transactionsTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Transactions", jPanel1);

        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        jScrollPane1.setViewportView(logTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Logs", jPanel2);

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        jScrollPane3.setViewportView(resultTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Results", jPanel3);

        jLabel2.setText("Files:");

        fileTextField.setEditable(false);
        fileTextField.setAutoscrolls(false);
        fileTextField.setMaximumSize(new java.awt.Dimension(294, 23));

        jLabel5.setText("Min. Support Count = ");

        minSupportCountText.setText(" ");

        resetBttn.setText("RESET");
        resetBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBttnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTabbedPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(minSupportCountText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(fileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(inputSupport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel4)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(inputConfidence, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(resetBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(runBttn)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(browseBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(browseBttn)
                            .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runBttn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(inputSupport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(inputConfidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minSupportCountText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseBttnActionPerformed
        fileChooser.showOpenDialog(frame);
        files = fileChooser.getSelectedFiles();
        
        TOTAL_TRANSACTIONS = 0;
              
    }//GEN-LAST:event_browseBttnActionPerformed

    private void runBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBttnActionPerformed
        browseBttn.setEnabled(false);
        runBttn.setEnabled(false);  
        
        SUPPORT = checkInputValues(inputSupport.getText());
        CONFIDENCE = checkInputValues(inputConfidence.getText());
        
        // initialize 
        TRANSACTIONS_LIST.clear(); 
        MAX_ITEMS = 0;
        
        readTransactions(); // read all transactions  
        MIN_SUPPORT_COUNT = TOTAL_TRANSACTIONS * SUPPORT/100;
        minSupportCountText.setText(MIN_SUPPORT_COUNT + "");                
        
        prunningProcess(TRANSACTIONS_LIST, MIN_SUPPORT_COUNT);
    }//GEN-LAST:event_runBttnActionPerformed

    private void resetBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBttnActionPerformed
        browseBttn.setEnabled(true);
        runBttn.setEnabled(true);
        inputSupport.setText("");
        inputConfidence.setText("");
        fileTextField.setText("");
        transactionsTextArea.setText("");
        logTextArea.setText("");
        minSupportCountText.setText("");
    }//GEN-LAST:event_resetBttnActionPerformed
      
    /**
     * Check the user's input value
     * Values must be between 0 and 1
     * @param input the user's input
     */
    private int checkInputValues(String input) {
        try
        {
            Integer.parseInt(input);

            if (Integer.parseInt(input) > 100 || Integer.parseInt(input) < 0) {
                JOptionPane.showMessageDialog(this, "Invalid input. You entered: " + input + ".\nYou must enter a number between 0 and 100",
                                            "WARNING", JOptionPane.WARNING_MESSAGE);
            }
        }
        catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this, "Invalid input. You entered: " + input + ".\nYou must enter a number",
                                            "WARNING", JOptionPane.WARNING_MESSAGE);
        }   
        return Integer.parseInt(input);
    }    
    
    /**
     * Read all transactions from the selected files
     */
    private void readTransactions()
    {        
        try {            
            // loop through each of the selected files
            for(File f : files)
            {
                // display 
                String filePath = f.getAbsolutePath();
                transactionsTextArea.append("File: " + filePath + "\n");
                fileTextField.setText(fileTextField.getText() + filePath + ";");
                
                // create a new buffered reader to read data
                BufferedReader transactions = new BufferedReader(new FileReader(filePath));
                
                // Go through each line within the file
                while (transactions.ready()) 
                {
                    String line = transactions.readLine().replace(" ", "");  // a line in the file                    
                    List <String> order = Arrays.asList(line.split(","));   // store all items in this transactions in a List
                    
                    TRANSACTIONS_LIST.add(order);   // add this transaction to the master list
                    
                    TOTAL_TRANSACTIONS++;   // increase the count of the total transactions
                    
                    if(line.split(",").length >= MAX_ITEMS)
                        MAX_ITEMS = line.split(",").length;
                    
                    // display transactions
                    transactionsTextArea.append("{ " + line + " }\n");
                }
                transactionsTextArea.append("\n");
            }            
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private HashMap<String, Integer> prunningProcess(ArrayList<List<String>> transactionsArray, int support_number)
    {
        HashMap <String, Integer> newItemSet = new HashMap();
                
        logTextArea.append("Prunning process started.\n");
        for(List <String> transaction : transactionsArray)
        {
            for(String item : transaction)  // an item or set of items
            {
                if(ITEM_SET.isEmpty())
                {
                    ITEM_SET.put(item, 1);  
                }
                else
                { 
                    boolean inserted = false;
                    for(String miniItemSet : ITEM_SET.keySet())
                    {
                        // check to see whether it's has only 1 item or more item in each itemSet
                        if(miniItemSet.contains(","))   // it contains multiple items
                        {
                            List tmp1 = Arrays.asList(item.split(","));
                            List tmp2 = Arrays.asList(miniItemSet.split(","));
                            
                            Collections.sort(tmp1);
                            Collections.sort(tmp2);
                            
                            if(tmp1.equals(tmp2))
                            {
                                ITEM_SET.put(item, ITEM_SET.get(item) + 1);  
                                inserted = true;
                                break;
                            }
                        }
                        else if(item.equalsIgnoreCase(miniItemSet))
                        {
                            ITEM_SET.put(item, ITEM_SET.get(item) + 1);
                            inserted = true;
                            break;
                        }                         
                        else
                            inserted = false;
                    }                    
                    if(inserted == false)
                    {
                        ITEM_SET.put(item, 1);
                    }
                }
            }
        }    
        
        // Display log
        for(String itemSet : ITEM_SET.keySet())
        {
            logTextArea.append("{ " + itemSet +  " }\t-\t" + ITEM_SET.get(itemSet)) ;
            
            if(ITEM_SET.get(itemSet) >= support_number)
            {
                logTextArea.append("  ***\n");
                newItemSet.put(itemSet, ITEM_SET.get(itemSet));
            }
            else
                logTextArea.append("\n");
        }        
        
        // display in the result area
        resultTextArea.append("=== New ItemSet === \n");
        for(String itemSet : newItemSet.keySet())
        {
            resultTextArea.append("{ " + itemSet +  " }\t-\t" + ITEM_SET.get(itemSet) + "\n") ;
        }
        resultTextArea.append("\n");
        
        
        return newItemSet;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton browseBttn;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JTextField inputConfidence;
    private javax.swing.JTextField inputSupport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JLabel minSupportCountText;
    private javax.swing.JButton resetBttn;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JButton runBttn;
    private javax.swing.JTextArea transactionsTextArea;
    // End of variables declaration//GEN-END:variables
}
